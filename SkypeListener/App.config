<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <unity>
    <typeAliases>
      <typeAlias alias="ICommand" type="Contract.ICommand, Contract" />
      <typeAlias alias="GetMBExchangeRatesCmd" type="Minfin.mb.GetMBExchangeRatesCmd, Minfin.mb" />
      <typeAlias alias="GetLocalExchangeRatesCmd" type="Obmenka.kh.GetLocalExchangeRatesCmd, Obmenka.kh" />
      <typeAlias alias="GetPumbExchangeRateCmd" type="pumb.GetPumbExchangeRateCmd, pumb" />
    </typeAliases>
    <containers>
      <container>
        <types>
          <type type="ICommand" mapTo="GetMBExchangeRatesCmd" name="mb"/>
          <type type="ICommand" mapTo="GetLocalExchangeRatesCmd" name="obmenka"/>
          <type type="ICommand" mapTo="GetPumbExchangeRateCmd" name="pumb"/>
        <!--  <type type="ILogger" mapTo="DebugLogger" name="debugLogger"/>
          <type type="IContext" mapTo="UnityContext">
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="logger" parameterType="ILogger">
                  <dependency name="debugLogger"/>
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="CustomerTasks">
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="context" parameterType="IContext">
                  <dependency/>
                </param>
              </constructor>
            </typeConfig>
          </type>-->
        </types>
      </container>
    </containers>
  </unity>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
    </startup>
</configuration>